import fs from "fs";
import path from "path";
import Head from "next/head";
import matter from "gray-matter";
import RootLayout from "../layout";
import Link from "next/link";
import { metadata } from "@/theme.config";
import { useRouter } from "next/router";
import styles from "./page.module.css";
import remark from "remark";
import html from "remark-html";

export const getStaticProps = async () => {
  const files = fs.readdirSync(path.join("content/posts"));

  const posts = files.map((filename) => {
    const markdownWithMeta = fs.readFileSync(
      path.join("content/posts", filename),
      "utf-8"
    );
    const { data: frontmatter } = matter(markdownWithMeta);

    const slug = filename.split(".")[0];
    return {
      frontmatter,
      slug,
      href: `/${slug}`,
    };
  });

  return {
    props: {
      posts,
    },
  };
};

export default function Posts({ posts }) {
  const pageTitle = `${metadata.title} - Posts`;
  const router = useRouter();
  const { page } = router.query;
  const itemsPerPage = 7; // Ubah sesuai dengan jumlah posting per halaman yang Anda inginkan

  const startIndex = page ? (parseInt(page) - 1) * itemsPerPage : 0;
  const endIndex = startIndex + itemsPerPage;
  const paginatedPosts = posts.slice(startIndex, endIndex);

  const totalPages = Math.ceil(posts.length / itemsPerPage);

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>{pageTitle}</title>
      </Head>
      <RootLayout>
        <h1>Posts</h1>
        <ul>
          {paginatedPosts
            .sort(
              (a, b) =>
                new Date(b.frontmatter.date) - new Date(a.frontmatter.date)
            )
            .map((post, index) => (
              <div key={index} className="post-item">
                <h3>
                  <Link className="post-item-title" href={post.href}>
                    {post.frontmatter.title}
                  </Link>
                </h3>
                <p className="post-item-desc">
                  {post.frontmatter.description && (
                    <>{post.frontmatter.description.slice(0, 100)}...</>
                  )}
                  <Link className="post-item-more" href={post.href}>
                    Baca &rarr;
                  </Link>
                </p>
                <time className="post-item-date">{post.frontmatter.date}</time>
              </div>
            ))}
        </ul>
        <div className={styles.pagination}>
          {Array.from({ length: totalPages }, (_, i) => (
            <Link
              className={`${styles.span} active`}
              key={i}
              href={`/posts?page=${i + 1}`}
            >
              <span className={parseInt(page) === i + 1 ? "active" : ""}>
                {i + 1}
              </span>
            </Link>
          ))}
        </div>
      </RootLayout>
    </>
  );
}
